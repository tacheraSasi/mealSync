version: '3.8'

services:
  # Main API Service (Node.js + TypeORM) - Development mode
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    container_name: mealsync-api-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=mealsync_db
      - JWT_SECRET=development_jwt_secret_change_in_production
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - FRONTEND_URL=http://localhost:5173
    ports:
      - "3001:3001"
    volumes:
      - ./server/src:/app/src
      - ./server/package.json:/app/package.json
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - mealsync-network

  # Notification Service (Go) - Development mode
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: mealsync-notification-dev
    restart: unless-stopped
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=noreply@mealsync.com
      - SMS_APIKEY=${SMS_APIKEY}
      - EMAIL_APIKEY=${EMAIL_APIKEY}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - mealsync-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mealsync-db-dev
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mealsync_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mealsync_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mealsync-network

  # RabbitMQ for inter-service communication
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: mealsync-rabbitmq-dev
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - mealsync-network

networks:
  mealsync-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
